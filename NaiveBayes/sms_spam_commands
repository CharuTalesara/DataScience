wget https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/sms_spam.csv

setwd("/home/user/Capstan/AI_ML Docs/ML")

str(sms_raw)

sms_raw$type <- factor(sms_raw$type)
str(sms_raw$type)
table(sms_raw$type)
install.packages("tm")


library(tm)

terminl -sudo apt-get install libxml2-dev

install.packages("xml2")
install.packages("tm")
sms_corpus_clean <- VCorpus(VectorSource(sms_raw$text))

print(sms_corpus_clean)
as.character(sms_corpus[[1]])
lapply(sms_corpus_clean[1:2], as.character)

sms_corpus_clean<-tm_map(sms_corpus_clean,content_transformer(tolower))
sms_corpus_clean<-tm_map(sms_corpus_clean,removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,removeWords,stopwords())

sms_corpus_clean<-tm_map(sms_corpus_clean,removePunctuation)
install.packages("SnowballC")--to use stemming
library(SnowballC)
sms_corpus_clean<-tm_map(sms_corpus_clean,stemDocument)
sms_corpus_clean<-tm_map(sms_corpus_clean,stripWhitespace)

sms_dtm <- DocumentTermMatrix(sms_corpus_clean)


//
sms_dtm2 <- DocumentTermMatrix(sms_corpus, control = list(
tolower = TRUE,
removeNumbers = TRUE,
stopwords = TRUE,
removePunctuation = TRUE,
stemming = TRUE
))


> sms_dtm_train<-sms_dtm[1:4169,]
> sms_dtm_test<-sms_dtm[4170:5559,]
sms_train_labels <- sms_raw[1:4169, ]$type
sms_test_labels<- sms_raw[4170:5559, ]$type

 prop.table(table(sms_test_labels))
 prop.table(table(sms_train_labels))
	install.packages("wordcloud")
 library(wordcloud)
wordcloud(sms_corpus_clean, min.freq = 50, random.order = FALSE)
spam<-subset(sms_raw,type=="spam")
ham<-subset(sms_raw,type=="ham")
wordcloud(ham$text, min.freq = 40, random.order = FALSE)

sms_freq_words<-findFreqTerms(sms_dtm_train,5)
str(sms_freq_words)

sms_dtm_freq_train<- sms_dtm_train[ , sms_freq_words]
sms_dtm_freq_test<- sms_dtm_test[ , sms_freq_words]

str(sms_dtm_freq_train)
str(sms_dtm_freq_test)


convert_counts<-function(x)
{
	x<-ifelse(x>0,"Yes","No")
}

sms_test<-apply(sms_dtm_freq_test,MARGIN = 2,convert_counts)
sms_train<-apply(sms_dtm_freq_train,MARGIN = 2,convert_counts)
install.packages("e1071")
library("e1071")

sms_classifier <- naiveBayes(sms_train, sms_train_labels)
sms_test_pred<-predict(sms_classifier,sms_test)
library(gmodels)
CrossTable(sms_test_pred, sms_test_labels,
prop.chisq = FALSE, prop.t = FALSE,
dnn = c('predicted', 'actual'))

//Improving model performance

sms_classifier2 <- naiveBayes(sms_train, sms_train_labels,
laplace = 1)

sms_test_pred2 <- predict(sms_classifier2, sms_test)

CrossTable(sms_test_pred2, sms_test_labels,
prop.chisq = FALSE, prop.t = FALSE, prop.r = FALSE,
dnn = c('predicted', 'actual'))
